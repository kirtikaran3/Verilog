$date
   Wed Apr 05 09:53:16 2017
$end
$version
  P.49d
$end
$timescale
  1ps
$end
$scope module testHarness $end
$var wire 1 H sda $end
$var wire 1 I scl $end
$var wire 1 # sdaOutEn $end
$var wire 1 $ sdaOut $end
$var wire 1 % sdaIn $end
$var wire 1 P" adr [2] $end
$var wire 1 Q" adr [1] $end
$var wire 1 R" adr [0] $end
$var wire 1 S" masterDout [7] $end
$var wire 1 T" masterDout [6] $end
$var wire 1 U" masterDout [5] $end
$var wire 1 V" masterDout [4] $end
$var wire 1 W" masterDout [3] $end
$var wire 1 X" masterDout [2] $end
$var wire 1 Y" masterDout [1] $end
$var wire 1 Z" masterDout [0] $end
$var wire 1 A$ masterDin [7] $end
$var wire 1 B$ masterDin [6] $end
$var wire 1 C$ masterDin [5] $end
$var wire 1 D$ masterDin [4] $end
$var wire 1 E$ masterDin [3] $end
$var wire 1 F$ masterDin [2] $end
$var wire 1 G$ masterDin [1] $end
$var wire 1 H$ masterDin [0] $end
$var wire 1 [" we $end
$var wire 1 \" stb $end
$var wire 1 ]" cyc $end
$var wire 1 I$ ack $end
$var wire 1 ($ scl_pad_i $end
$var wire 1 )$ scl_pad_o $end
$var wire 1 \# scl_padoen_o $end
$var wire 1 *$ sda_pad_i $end
$var wire 1 +$ sda_pad_o $end
$var wire 1 _# sda_padoen_o $end
$var reg 1 C rst $end
$var reg 1 D clk $end
$var reg 1 E i2cHostClk $end
$scope task reset $end
$upscope $end
$scope module u_i2cSlave $end
$var wire 1 +" clk $end
$var wire 1 G rst $end
$var wire 1 H sda $end
$var wire 1 I scl $end
$var wire 1 J myReg0 [7] $end
$var wire 1 K myReg0 [6] $end
$var wire 1 L myReg0 [5] $end
$var wire 1 M myReg0 [4] $end
$var wire 1 N myReg0 [3] $end
$var wire 1 O myReg0 [2] $end
$var wire 1 P myReg0 [1] $end
$var wire 1 Q myReg0 [0] $end
$var wire 1 R myReg1 [7] $end
$var wire 1 S myReg1 [6] $end
$var wire 1 T myReg1 [5] $end
$var wire 1 U myReg1 [4] $end
$var wire 1 V myReg1 [3] $end
$var wire 1 W myReg1 [2] $end
$var wire 1 X myReg1 [1] $end
$var wire 1 Y myReg1 [0] $end
$var wire 1 Z myReg2 [7] $end
$var wire 1 [ myReg2 [6] $end
$var wire 1 \ myReg2 [5] $end
$var wire 1 ] myReg2 [4] $end
$var wire 1 ^ myReg2 [3] $end
$var wire 1 _ myReg2 [2] $end
$var wire 1 ` myReg2 [1] $end
$var wire 1 a myReg2 [0] $end
$var wire 1 b myReg3 [7] $end
$var wire 1 c myReg3 [6] $end
$var wire 1 d myReg3 [5] $end
$var wire 1 e myReg3 [4] $end
$var wire 1 f myReg3 [3] $end
$var wire 1 g myReg3 [2] $end
$var wire 1 h myReg3 [1] $end
$var wire 1 i myReg3 [0] $end
$var wire 1 d! myReg4 [7] $end
$var wire 1 e! myReg4 [6] $end
$var wire 1 f! myReg4 [5] $end
$var wire 1 g! myReg4 [4] $end
$var wire 1 h! myReg4 [3] $end
$var wire 1 i! myReg4 [2] $end
$var wire 1 j! myReg4 [1] $end
$var wire 1 k! myReg4 [0] $end
$var wire 1 l! myReg5 [7] $end
$var wire 1 m! myReg5 [6] $end
$var wire 1 n! myReg5 [5] $end
$var wire 1 o! myReg5 [4] $end
$var wire 1 p! myReg5 [3] $end
$var wire 1 q! myReg5 [2] $end
$var wire 1 r! myReg5 [1] $end
$var wire 1 s! myReg5 [0] $end
$var wire 1 t! myReg6 [7] $end
$var wire 1 u! myReg6 [6] $end
$var wire 1 v! myReg6 [5] $end
$var wire 1 w! myReg6 [4] $end
$var wire 1 x! myReg6 [3] $end
$var wire 1 y! myReg6 [2] $end
$var wire 1 z! myReg6 [1] $end
$var wire 1 {! myReg6 [0] $end
$var wire 1 |! myReg7 [7] $end
$var wire 1 }! myReg7 [6] $end
$var wire 1 ~! myReg7 [5] $end
$var wire 1 !" myReg7 [4] $end
$var wire 1 "" myReg7 [3] $end
$var wire 1 #" myReg7 [2] $end
$var wire 1 $" myReg7 [1] $end
$var wire 1 %" myReg7 [0] $end
$var wire 1 ,! clearStartStopDet $end
$var wire 1 -! sdaOut $end
$var wire 1 .! sdaIn $end
$var wire 1 S! regAddr [7] $end
$var wire 1 T! regAddr [6] $end
$var wire 1 U! regAddr [5] $end
$var wire 1 V! regAddr [4] $end
$var wire 1 W! regAddr [3] $end
$var wire 1 X! regAddr [2] $end
$var wire 1 Y! regAddr [1] $end
$var wire 1 Z! regAddr [0] $end
$var wire 1 [! dataToRegIF [7] $end
$var wire 1 \! dataToRegIF [6] $end
$var wire 1 ]! dataToRegIF [5] $end
$var wire 1 ^! dataToRegIF [4] $end
$var wire 1 _! dataToRegIF [3] $end
$var wire 1 `! dataToRegIF [2] $end
$var wire 1 a! dataToRegIF [1] $end
$var wire 1 b! dataToRegIF [0] $end
$var wire 1 c! writeEn $end
$var wire 1 ," dataFromRegIF [7] $end
$var wire 1 -" dataFromRegIF [6] $end
$var wire 1 ." dataFromRegIF [5] $end
$var wire 1 /" dataFromRegIF [4] $end
$var wire 1 0" dataFromRegIF [3] $end
$var wire 1 1" dataFromRegIF [2] $end
$var wire 1 2" dataFromRegIF [1] $end
$var wire 1 3" dataFromRegIF [0] $end
$var wire 1 H! rstSyncToClk $end
$var reg 1 I! sdaDeb $end
$var reg 1 J! sclDeb $end
$var reg 10 K! sdaPipe [9:0] $end
$var reg 10 L! sclPipe [9:0] $end
$var reg 10 M! sclDelayed [9:0] $end
$var reg 4 N! sdaDelayed [3:0] $end
$var reg 2 O! startStopDetState [1:0] $end
$var reg 2 P! rstPipe [1:0] $end
$var reg 1 Q! startEdgeDet $end
$scope module u_registerInterface $end
$var wire 1 +" clk $end
$var wire 1 S! addr [7] $end
$var wire 1 T! addr [6] $end
$var wire 1 U! addr [5] $end
$var wire 1 V! addr [4] $end
$var wire 1 W! addr [3] $end
$var wire 1 X! addr [2] $end
$var wire 1 Y! addr [1] $end
$var wire 1 Z! addr [0] $end
$var wire 1 [! dataIn [7] $end
$var wire 1 \! dataIn [6] $end
$var wire 1 ]! dataIn [5] $end
$var wire 1 ^! dataIn [4] $end
$var wire 1 _! dataIn [3] $end
$var wire 1 `! dataIn [2] $end
$var wire 1 a! dataIn [1] $end
$var wire 1 b! dataIn [0] $end
$var wire 1 c! writeEn $end
$var wire 1 d! myReg4 [7] $end
$var wire 1 e! myReg4 [6] $end
$var wire 1 f! myReg4 [5] $end
$var wire 1 g! myReg4 [4] $end
$var wire 1 h! myReg4 [3] $end
$var wire 1 i! myReg4 [2] $end
$var wire 1 j! myReg4 [1] $end
$var wire 1 k! myReg4 [0] $end
$var wire 1 l! myReg5 [7] $end
$var wire 1 m! myReg5 [6] $end
$var wire 1 n! myReg5 [5] $end
$var wire 1 o! myReg5 [4] $end
$var wire 1 p! myReg5 [3] $end
$var wire 1 q! myReg5 [2] $end
$var wire 1 r! myReg5 [1] $end
$var wire 1 s! myReg5 [0] $end
$var wire 1 t! myReg6 [7] $end
$var wire 1 u! myReg6 [6] $end
$var wire 1 v! myReg6 [5] $end
$var wire 1 w! myReg6 [4] $end
$var wire 1 x! myReg6 [3] $end
$var wire 1 y! myReg6 [2] $end
$var wire 1 z! myReg6 [1] $end
$var wire 1 {! myReg6 [0] $end
$var wire 1 |! myReg7 [7] $end
$var wire 1 }! myReg7 [6] $end
$var wire 1 ~! myReg7 [5] $end
$var wire 1 !" myReg7 [4] $end
$var wire 1 "" myReg7 [3] $end
$var wire 1 #" myReg7 [2] $end
$var wire 1 $" myReg7 [1] $end
$var wire 1 %" myReg7 [0] $end
$var reg 8 &" dataOut [7:0] $end
$var reg 8 '" myReg0 [7:0] $end
$var reg 8 (" myReg1 [7:0] $end
$var reg 8 )" myReg2 [7:0] $end
$var reg 8 *" myReg3 [7:0] $end
$upscope $end
$scope module u_serialInterface $end
$var wire 1 +" clk $end
$var wire 1 ," dataIn [7] $end
$var wire 1 -" dataIn [6] $end
$var wire 1 ." dataIn [5] $end
$var wire 1 /" dataIn [4] $end
$var wire 1 0" dataIn [3] $end
$var wire 1 1" dataIn [2] $end
$var wire 1 2" dataIn [1] $end
$var wire 1 3" dataIn [0] $end
$var wire 1 4" rst $end
$var wire 1 5" scl $end
$var wire 1 6" sdaIn $end
$var wire 1 7" startStopDetState [1] $end
$var wire 1 8" startStopDetState [0] $end
$var reg 1 9" clearStartStopDet $end
$var reg 8 :" dataOut [7:0] $end
$var reg 8 ;" regAddr [7:0] $end
$var reg 1 <" sdaOut $end
$var reg 1 =" writeEn $end
$var reg 1 >" next_clearStartStopDet $end
$var reg 8 ?" next_dataOut [7:0] $end
$var reg 8 @" next_regAddr [7:0] $end
$var reg 1 A" next_sdaOut $end
$var reg 1 B" next_writeEn $end
$var reg 3 C" bitCnt [2:0] $end
$var reg 3 D" next_bitCnt [2:0] $end
$var reg 8 E" rxData [7:0] $end
$var reg 8 F" next_rxData [7:0] $end
$var reg 2 G" streamSt [1:0] $end
$var reg 2 H" next_streamSt [1:0] $end
$var reg 8 I" txData [7:0] $end
$var reg 8 J" next_txData [7:0] $end
$var reg 4 K" CurrState_SISt [3:0] $end
$var reg 4 L" NextState_SISt [3:0] $end
$upscope $end
$upscope $end
$scope module u_i2c_master_top $end
$var wire 1 m# wb_clk_i $end
$var wire 1 n# wb_rst_i $end
$var wire 1 O" arst_i $end
$var wire 1 P" wb_adr_i [2] $end
$var wire 1 Q" wb_adr_i [1] $end
$var wire 1 R" wb_adr_i [0] $end
$var wire 1 S" wb_dat_i [7] $end
$var wire 1 T" wb_dat_i [6] $end
$var wire 1 U" wb_dat_i [5] $end
$var wire 1 V" wb_dat_i [4] $end
$var wire 1 W" wb_dat_i [3] $end
$var wire 1 X" wb_dat_i [2] $end
$var wire 1 Y" wb_dat_i [1] $end
$var wire 1 Z" wb_dat_i [0] $end
$var wire 1 [" wb_we_i $end
$var wire 1 \" wb_stb_i $end
$var wire 1 ]" wb_cyc_i $end
$var wire 1 ($ scl_pad_i $end
$var wire 1 )$ scl_pad_o $end
$var wire 1 \# scl_padoen_o $end
$var wire 1 *$ sda_pad_i $end
$var wire 1 +$ sda_pad_o $end
$var wire 1 _# sda_padoen_o $end
$var wire 1 R# rxr [7] $end
$var wire 1 S# rxr [6] $end
$var wire 1 T# rxr [5] $end
$var wire 1 U# rxr [4] $end
$var wire 1 V# rxr [3] $end
$var wire 1 W# rxr [2] $end
$var wire 1 X# rxr [1] $end
$var wire 1 Y# rxr [0] $end
$var wire 1 l" sr [7] $end
$var wire 1 m" sr [6] $end
$var wire 1 n" sr [5] $end
$var wire 1 o" sr [4] $end
$var wire 1 p" sr [3] $end
$var wire 1 q" sr [2] $end
$var wire 1 r" sr [1] $end
$var wire 1 s" sr [0] $end
$var wire 1 t" done $end
$var wire 1 p# core_en $end
$var wire 1 v" ien $end
$var wire 1 w" irxack $end
$var wire 1 P# i2c_busy $end
$var wire 1 Q# i2c_al $end
$var wire 1 o# rst_i $end
$var wire 1 {" wb_wacc $end
$var wire 1 C# sta $end
$var wire 1 D# sto $end
$var wire 1 E# rd $end
$var wire 1 F# wr $end
$var wire 1 G# ack $end
$var wire 1 ## iack $end
$var reg 8 $# wb_dat_o [7:0] $end
$var reg 1 %# wb_ack_o $end
$var reg 1 &# wb_inta_o $end
$var reg 16 '# prer [15:0] $end
$var reg 8 (# ctr [7:0] $end
$var reg 8 )# txr [7:0] $end
$var reg 8 *# cr [7:0] $end
$var reg 1 +# rxack $end
$var reg 1 ,# tip $end
$var reg 1 -# irq_flag $end
$var reg 1 .# al $end
$scope module byte_controller $end
$var wire 1 m# clk $end
$var wire 1 n# rst $end
$var wire 1 o# nReset $end
$var wire 1 p# ena $end
$var wire 1 q# clk_cnt [15] $end
$var wire 1 r# clk_cnt [14] $end
$var wire 1 s# clk_cnt [13] $end
$var wire 1 t# clk_cnt [12] $end
$var wire 1 u# clk_cnt [11] $end
$var wire 1 v# clk_cnt [10] $end
$var wire 1 w# clk_cnt [9] $end
$var wire 1 x# clk_cnt [8] $end
$var wire 1 y# clk_cnt [7] $end
$var wire 1 z# clk_cnt [6] $end
$var wire 1 {# clk_cnt [5] $end
$var wire 1 |# clk_cnt [4] $end
$var wire 1 }# clk_cnt [3] $end
$var wire 1 ~# clk_cnt [2] $end
$var wire 1 !$ clk_cnt [1] $end
$var wire 1 "$ clk_cnt [0] $end
$var wire 1 C# start $end
$var wire 1 D# stop $end
$var wire 1 E# read $end
$var wire 1 F# write $end
$var wire 1 G# ack_in $end
$var wire 1 H# din [7] $end
$var wire 1 I# din [6] $end
$var wire 1 J# din [5] $end
$var wire 1 K# din [4] $end
$var wire 1 L# din [3] $end
$var wire 1 M# din [2] $end
$var wire 1 N# din [1] $end
$var wire 1 O# din [0] $end
$var wire 1 P# i2c_busy $end
$var wire 1 Q# i2c_al $end
$var wire 1 R# dout [7] $end
$var wire 1 S# dout [6] $end
$var wire 1 T# dout [5] $end
$var wire 1 U# dout [4] $end
$var wire 1 V# dout [3] $end
$var wire 1 W# dout [2] $end
$var wire 1 X# dout [1] $end
$var wire 1 Y# dout [0] $end
$var wire 1 ($ scl_i $end
$var wire 1 )$ scl_o $end
$var wire 1 \# scl_oen $end
$var wire 1 *$ sda_i $end
$var wire 1 +$ sda_o $end
$var wire 1 _# sda_oen $end
$var wire 1 `# core_ack $end
$var wire 1 a# core_rxd $end
$var wire 1 b# go $end
$var wire 1 c# cnt_done $end
$var reg 1 d# cmd_ack $end
$var reg 1 e# ack_out $end
$var reg 4 f# core_cmd [3:0] $end
$var reg 1 g# core_txd $end
$var reg 8 h# sr [7:0] $end
$var reg 1 i# shift $end
$var reg 1 j# ld $end
$var reg 3 k# dcnt [2:0] $end
$var reg 5 l# c_state [4:0] $end
$scope module bit_controller $end
$var wire 1 m# clk $end
$var wire 1 n# rst $end
$var wire 1 o# nReset $end
$var wire 1 p# ena $end
$var wire 1 q# clk_cnt [15] $end
$var wire 1 r# clk_cnt [14] $end
$var wire 1 s# clk_cnt [13] $end
$var wire 1 t# clk_cnt [12] $end
$var wire 1 u# clk_cnt [11] $end
$var wire 1 v# clk_cnt [10] $end
$var wire 1 w# clk_cnt [9] $end
$var wire 1 x# clk_cnt [8] $end
$var wire 1 y# clk_cnt [7] $end
$var wire 1 z# clk_cnt [6] $end
$var wire 1 {# clk_cnt [5] $end
$var wire 1 |# clk_cnt [4] $end
$var wire 1 }# clk_cnt [3] $end
$var wire 1 ~# clk_cnt [2] $end
$var wire 1 !$ clk_cnt [1] $end
$var wire 1 "$ clk_cnt [0] $end
$var wire 1 #$ cmd [3] $end
$var wire 1 $$ cmd [2] $end
$var wire 1 %$ cmd [1] $end
$var wire 1 &$ cmd [0] $end
$var wire 1 '$ din $end
$var wire 1 ($ scl_i $end
$var wire 1 )$ scl_o $end
$var wire 1 *$ sda_i $end
$var wire 1 +$ sda_o $end
$var wire 1 ,$ slave_wait $end
$var reg 1 -$ cmd_ack $end
$var reg 1 .$ busy $end
$var reg 1 /$ al $end
$var reg 1 0$ dout $end
$var reg 1 1$ scl_oen $end
$var reg 1 2$ sda_oen $end
$var reg 1 3$ sSCL $end
$var reg 1 4$ sSDA $end
$var reg 1 5$ dscl_oen $end
$var reg 1 6$ sda_chk $end
$var reg 1 7$ clk_en $end
$var reg 16 8$ cnt [15:0] $end
$var reg 17 9$ c_state [16:0] $end
$var reg 1 :$ dSCL $end
$var reg 1 ;$ dSDA $end
$var reg 1 <$ sta_condition $end
$var reg 1 =$ sto_condition $end
$var reg 1 >$ cmd_stop $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_wb_master_model $end
$var wire 1 ?$ clk $end
$var wire 1 @$ rst $end
$var wire 1 A$ din [7] $end
$var wire 1 B$ din [6] $end
$var wire 1 C$ din [5] $end
$var wire 1 D$ din [4] $end
$var wire 1 E$ din [3] $end
$var wire 1 F$ din [2] $end
$var wire 1 G$ din [1] $end
$var wire 1 H$ din [0] $end
$var wire 1 I$ ack $end
$var wire 1 J$ err $end
$var wire 1 K$ rty $end
$var reg 3 L$ adr [2:0] $end
$var reg 8 M$ dout [7:0] $end
$var reg 1 N$ cyc $end
$var reg 1 O$ stb $end
$var reg 1 P$ we $end
$var reg 1 Q$ sel [0:0] $end
$var reg 8 R$ q [7:0] $end
$scope task wb_write $end
$var integer 32 S$ delay $end
$var reg 3 T$ a [2:0] $end
$var reg 8 U$ d [7:0] $end
$upscope $end
$scope task wb_read $end
$var integer 32 V$ delay $end
$var reg 3 W$ a [2:0] $end
$var reg 8 X$ d [7:0] $end
$upscope $end
$scope task wb_cmp $end
$var integer 32 Y$ delay $end
$var reg 3 Z$ a [2:0] $end
$var reg 8 [$ d_exp [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xw#
xq#
xu#
xO#
xM#
xm#
xL#
x~#
xH#
x5"
x7"
xb
xn#
xx#
xJ#
x!$
x&$
xr#
xc
xv#
xO"
xt#
xK#
x}#
xN#
xd
xy#
xs#
xI#
x"$
x|#
x6"
x8"
x{#
xz#
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xH
xI
z#
z$
z%
xR"
xQ"
xP"
xZ"
bx &"
bx '"
bx ("
bx )"
bx *"
x9"
bx :"
bx ;"
x<"
x="
x>"
bx ?"
bx @"
xA"
xB"
bx C"
bx D"
bx E"
bx F"
bx G"
bx H"
bx I"
bx J"
bx K"
bx L"
x%$
x@$
x$$
x'$
x#$
x?$
xC
xD
xE
0)$
0]"
x*$
x\#
xC$
0+$
xD$
xA$
x["
xH$
xB$
xE$
x\"
xF$
xG$
xI$
x($
1o!
1y!
0v!
0|!
1""
0J$
0s!
1u!
1j!
0K$
x,!
x_#
0i!
1n!
1z!
0k!
0f!
1q!
0{!
1w!
0$"
0h!
0#"
0%"
1g!
0t!
1!"
0p!
0m!
0l!
0d!
0x!
1~!
0e!
0r!
1}!
xI!
xJ!
bx K!
bx L!
bx M!
bx N!
bx O!
bx P!
xQ!
x3"
xY!
x]!
xX#
xV#
xU#
x,"
xT#
xS#
xW!
xU!
xX!
xT!
x1"
x."
xY#
x^!
xW#
xS!
xZ!
x.!
x-!
xV!
x_!
x`!
x[!
xa!
x\!
x2"
xc!
x/"
x-"
xb!
xH!
x0"
x4"
bx $#
x%#
x&#
bx '#
bx (#
bx )#
bx *#
x+#
x,#
x-#
x.#
xn"
xw"
0{"
xE#
xl"
xF#
xm"
0q"
xG#
xQ#
x##
xa#
xb#
xR#
xC#
x,$
xt"
0o"
xr"
xD#
xs"
xc#
xP#
0p"
x`#
xv"
xo#
xp#
xd#
xe#
bx f#
xg#
bx h#
xi#
xj#
bx k#
bx l#
x-$
x.$
x/$
x0$
x1$
x2$
x3$
x4$
x5$
x6$
x7$
bx 8$
bx 9$
x:$
x;$
x<$
x=$
x>$
bx L$
bx M$
0N$
xO$
xP$
xQ$
bx R$
bx S$
bx T$
bx U$
bx V$
bx W$
bx X$
bx Y$
bx Z$
bx [$
xW
xa
x`
x^
x]
x[
xi
xh
xg
xf
xT
xO
xV
xS
x+"
xR
xX
x_
x\
xJ
xN
xZ
xe
xQ
xU
xY
xG
xL
xM
xP
xK
$end
#10000
0m#
0?$
0D
0+"
#20000
1m#
b0 &"
1?$
1D
bx0 P!
0Q!
03"
0,"
01"
0."
02"
0/"
0-"
00"
1+"
#21000
0I$
0%#
bx000 *#
0##
0t"
0`#
0d#
0i#
0j#
0-$
07$
#30000
0m#
0?$
0D
0+"
#40000
1m#
1?$
1D
b0 P!
0H!
04"
1+"
#50000
0m#
0?$
0D
0+"
#60000
1m#
1?$
1D
1+"
#70000
0m#
0?$
0D
0+"
#80000
1m#
1?$
1D
1+"
#90000
0m#
0?$
0D
0+"
#100000
1m#
1?$
1D
1+"
#110000
0m#
0?$
0D
0+"
#120000
1m#
1?$
1D
1+"
#130000
0m#
0?$
0D
0+"
#140000
1m#
1?$
1D
1+"
#150000
0m#
0?$
0D
0+"
#160000
1m#
1?$
1D
1+"
#170000
0m#
0?$
0D
0+"
#180000
1m#
1?$
1D
1+"
#190000
0m#
0?$
0D
0+"
#200000
1m#
1?$
1D
1+"
#210000
0m#
0?$
0D
0+"
#220000
1m#
1?$
1D
1+"
#230000
0m#
0?$
0D
0+"
#240000
1m#
1?$
1D
1+"
#250000
0m#
0?$
0D
0+"
#260000
1m#
1?$
1D
1+"
#270000
0m#
0?$
0D
0+"
#280000
1m#
1?$
1D
1+"
#290000
0m#
0?$
0D
0+"
#300000
1m#
1?$
1D
1+"
#310000
0m#
0?$
0D
0+"
#320000
1m#
1?$
1D
1+"
#330000
0m#
0?$
0D
0+"
#340000
1m#
1?$
1D
1+"
#350000
0m#
0?$
0D
0+"
#360000
1m#
1?$
1D
1+"
#370000
0m#
0?$
0D
0+"
#380000
1m#
1?$
1D
1+"
#390000
0m#
0?$
0D
0+"
#400000
1m#
1?$
1D
1+"
#410000
0m#
0?$
0D
0+"
#420000
1m#
1?$
1D
1+"
#430000
0m#
0?$
0D
0+"
#440000
1m#
1?$
1D
1+"
#450000
0m#
0?$
0D
0+"
#460000
1m#
1?$
1D
1+"
#470000
0m#
0?$
0D
0+"
#480000
1m#
1?$
1D
1+"
#490000
0m#
0?$
0D
0+"
#500000
1m#
1?$
1D
1+"
#510000
0m#
0?$
0D
0+"
#520000
1m#
1?$
1D
1+"
#530000
0m#
0?$
0D
0+"
#540000
1m#
1?$
1D
1+"
#550000
0m#
0?$
0D
0+"
#560000
1m#
1?$
1D
1+"
#570000
0m#
0?$
0D
0+"
#580000
1m#
1?$
1D
1+"
#590000
0m#
0?$
0D
0+"
#600000
1m#
1?$
1D
1+"
#610000
0m#
0?$
0D
0+"
#620000
1m#
1?$
1D
1+"
#630000
0m#
0?$
0D
0+"
#640000
1m#
1?$
1D
1+"
#650000
0m#
0?$
0D
0+"
#660000
1m#
1?$
1D
1+"
#670000
0m#
0?$
0D
0+"
#680000
1m#
1?$
1D
1+"
#690000
0m#
0?$
0D
0+"
#700000
1m#
1?$
1D
1+"
#710000
0m#
0?$
0D
0+"
#720000
1m#
1?$
1D
1+"
#730000
0m#
0?$
0D
0+"
#740000
1m#
1?$
1D
1+"
#750000
0m#
0?$
0D
0+"
#760000
1m#
1?$
1D
1+"
#770000
0m#
0?$
0D
0+"
#780000
1m#
1?$
1D
1+"
#790000
0m#
0?$
0D
0+"
#800000
1m#
1?$
1D
1+"
#810000
0m#
0?$
0D
0+"
#820000
1m#
1?$
1D
1+"
#830000
0m#
0?$
0D
0+"
#840000
1m#
1?$
1D
1+"
#850000
0m#
0?$
0D
0+"
#860000
1m#
1?$
1D
1+"
#870000
0m#
0?$
0D
0+"
#880000
1m#
1?$
1D
1+"
#890000
0m#
0?$
0D
0+"
#900000
1m#
1?$
1D
1+"
#910000
0m#
0?$
0D
0+"
#920000
1m#
1?$
1D
1+"
#930000
0m#
0?$
0D
0+"
#940000
1m#
1?$
1D
1+"
#950000
0m#
0?$
0D
0+"
#960000
1m#
1?$
1D
1+"
#970000
0m#
0?$
0D
0+"
#980000
1m#
1?$
1D
1+"
#990000
0m#
0?$
0D
0+"
#1000000
1m#
1?$
1D
1+"
