<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="info" file="Xst" num="2679" delta="old" >Register &lt;<arg fmt="%s" index="1">addr</arg>&gt; in unit &lt;<arg fmt="%s" index="2">MASTER_EEPROM</arg>&gt; has a constant value of <arg fmt="%s" index="3">0110101</arg> during circuit operation. The register is replaced by logic.
</msg>

<msg type="info" file="Xst" num="2679" delta="old" >Register &lt;<arg fmt="%s" index="1">data</arg>&gt; in unit &lt;<arg fmt="%s" index="2">MASTER_EEPROM</arg>&gt; has a constant value of <arg fmt="%s" index="3">00110101</arg> during circuit operation. The register is replaced by logic.
</msg>

<msg type="info" file="Xst" num="2679" delta="old" >Register &lt;<arg fmt="%s" index="1">rw1</arg>&gt; in unit &lt;<arg fmt="%s" index="2">MASTER_EEPROM</arg>&gt; has a constant value of <arg fmt="%s" index="3">0</arg> during circuit operation. The register is replaced by logic.
</msg>

<msg type="warning" file="Xst" num="646" delta="old" >Signal &lt;<arg fmt="%s" index="1">slave_data_read</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">7</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">cathode</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="info" file="Xst" num="1767" delta="old" >HDL ADVISOR - Resource sharing has identified that some arithmetic operations in this design can share the same physical resources for reduced device utilization. For improved clock frequency you may try to disable resource sharing.
</msg>

<msg type="info" file="Xst" num="3034" delta="old" >In order to maximize performance and save block RAM resources, the small ROM &lt;<arg fmt="%s" index="1">Mrom_cathode_mux0001</arg>&gt; will be implemented on LUT. If you want to force its implementation on block, use option/constraint rom_style.
</msg>

<msg type="info" file="Xst" num="3034" delta="old" >In order to maximize performance and save block RAM resources, the small ROM &lt;<arg fmt="%s" index="1">Mrom_cathode_mux0002</arg>&gt; will be implemented on LUT. If you want to force its implementation on block, use option/constraint rom_style.
</msg>

<msg type="info" file="Xst" num="3034" delta="old" >In order to maximize performance and save block RAM resources, the small ROM &lt;<arg fmt="%s" index="1">Mrom_cathode_mux0004</arg>&gt; will be implemented on LUT. If you want to force its implementation on block, use option/constraint rom_style.
</msg>

<msg type="info" file="Xst" num="3034" delta="old" >In order to maximize performance and save block RAM resources, the small ROM &lt;<arg fmt="%s" index="1">Mrom_cathode_mux0003</arg>&gt; will be implemented on LUT. If you want to force its implementation on block, use option/constraint rom_style.
</msg>

<msg type="info" file="Xst" num="3021" delta="old" >HDL ADVISOR - Asynchronous or synchronous initialization of the register &lt;<arg fmt="%s" index="1">count</arg>&gt; prevents it from being combined with the ROM &lt;<arg fmt="%s" index="2">Mrom__COND_1</arg>&gt; for implementation as read-only block RAM.
</msg>

<msg type="info" file="Xst" num="3021" delta="old" >HDL ADVISOR - Asynchronous or synchronous initialization of the register &lt;<arg fmt="%s" index="1">count</arg>&gt; prevents it from being combined with the ROM &lt;<arg fmt="%s" index="2">Mrom__COND_2</arg>&gt; for implementation as read-only block RAM.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">db_7</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">MASTER_EEPROM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="info" file="Xst" num="2146" delta="old" >In block &lt;<arg fmt="%s" index="1">MASTER_EEPROM</arg>&gt;, <arg fmt="%s" index="2">ROM</arg> &lt;<arg fmt="%s" index="3">Mrom__COND_1</arg>&gt; </msg>

<msg type="info" file="Xst" num="2169" delta="old" >HDL ADVISOR - Some clock signals were not automatically buffered by XST with BUFG/BUFR resources. Please use the buffer_type constraint in order to insert these buffers to the clock signals to help prevent skew problems.
</msg>

</messages>

